<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="de">
<head>
<!-- Generated by javadoc (14.0.2) on Fri Jan 08 18:00:59 CET 2021 -->
<title>ReachabilityNet</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2021-01-08">
<meta name="description" content="declaration: package: model, class: ReachabilityNet">
<meta name="generator" content="javadoc/ClassWriterImpl">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../script-dir/jquery-ui.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
<script type="text/javascript" src="../script-dir/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../script-dir/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../script-dir/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../script-dir/jquery-3.4.1.js"></script>
<script type="text/javascript" src="../script-dir/jquery-ui.js"></script>
</head>
<body class="class-declaration">
<script type="text/javascript">var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../";
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class="flexBox">
<header role="banner" class="flexHeader">
<nav role="navigation">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ReachabilityNet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<div class="navListSearch"><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</div>
</div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="skipNav"><a id="skip.navbar.top">
<!--   -->
</a></div>
</nav>
</header>
<div class="flexContent">
<main role="main">
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">model</a></div>
<h1 title="Class ReachabilityNet" class="title">Class ReachabilityNet</h1>
</div>
<div class="contentContainer">
<div class="inheritance" title="Inheritance Tree">java.lang.Object
<div class="inheritance"><a href="Net.html" title="class in model">model.Net</a>
<div class="inheritance">model.ReachabilityNet</div>
</div>
</div>
<section class="description">
<hr>
<pre>public class <span class="typeNameLabel">ReachabilityNet</span>
extends <a href="Net.html" title="class in model">Net</a></pre>
<div class="block">Der Erreichbarkeitsgraph, dessen Markierungen hier verwaltet werden
 und der entscheidet, ob er unbeschränkt ist oder nicht.</div>
</section>
<section class="summary">
<ul class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<li class="blockList">
<section class="fieldSummary"><a id="field.summary">
<!--   -->
</a>
<h2>Field Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ROOT_NAME">ROOT_NAME</a></span></code></th>
<td class="colLast">
<div class="block">The transition name given to the root.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<li class="blockList">
<section class="constructorSummary"><a id="constructor.summary">
<!--   -->
</a>
<h2>Constructor Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(model.PetriNet)">ReachabilityNet</a></span>&#8203;(<a href="PetriNet.html" title="class in model">PetriNet</a>&nbsp;petriNet)</code></th>
<td class="colLast">
<div class="block">Erstellt einen Erreichbarkeitsgraphen, entnimmt dem Petrinetz
 seine Startkonfiguration und benutzt sie als Wurzel.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ========== METHOD SUMMARY =========== -->
<li class="blockList">
<section class="methodSummary"><a id="method.summary">
<!--   -->
</a>
<h2>Method Summary</h2>
<div class="memberSummary">
<div role="tablist" aria-orientation="horizontal"><button role="tab" aria-selected="true" aria-controls="memberSummary_tabpanel" tabindex="0" onkeydown="switchTab(event)" id="t0" class="activeTableTab">All Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t2" class="tableTab" onclick="show(2);">Instance Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t4" class="tableTab" onclick="show(8);">Concrete Methods</button></div>
<div id="memberSummary_tabpanel" role="tabpanel">
<table aria-labelledby="t0">
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor" id="i0">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#analyze(model.PetriNet)">analyze</a></span>&#8203;(<a href="PetriNet.html" title="class in model">PetriNet</a>&nbsp;petriNet)</code></th>
<td class="colLast">
<div class="block">Vervollständigt den Erreichbarkeitsgraphen.</div>
</td>
</tr>
<tr class="rowColor" id="i1">
<td class="colFirst"><code>java.util.Set&lt;<a href="Arc.html" title="class in model">Arc</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getArcs()">getArcs</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt alle Kanten des Graphen zurück.</div>
</td>
</tr>
<tr class="altColor" id="i2">
<td class="colFirst"><code><a href="Marking.html" title="class in model">Marking</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMarking(java.lang.String)">getMarking</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">Gibt die Markierung aus, die diese ID besitzt.</div>
</td>
</tr>
<tr class="rowColor" id="i3">
<td class="colFirst"><code>java.util.Set&lt;<a href="Marking.html" title="class in model">Marking</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMarkings()">getMarkings</a></span>()</code></th>
<td class="colLast">
<div class="block">Liefert alle Markierungen des Erreichbarkeitsgraphen.</div>
</td>
</tr>
<tr class="altColor" id="i4">
<td class="colFirst"><code>java.util.Set&lt;<a href="NodeModel.html" title="class in model">NodeModel</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNodes()">getNodes</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt alle Knoten des Netzes aus.</div>
</td>
</tr>
<tr class="rowColor" id="i5">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNumUniqueArcs()">getNumUniqueArcs</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor" id="i6">
<td class="colFirst"><code><a href="PetriNet.html" title="class in model">PetriNet</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPetriNet()">getPetriNet</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor" id="i7">
<td class="colFirst"><code><a href="Marking.html" title="class in model">Marking</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRoot()">getRoot</a></span>()</code></th>
<td class="colLast">
<div class="block">Liefert die Wurzel des Knoten, der die Startkonfiguration
 des Petrinetzes darstellt.</div>
</td>
</tr>
<tr class="altColor" id="i8">
<td class="colFirst"><code><a href="Marking.html" title="class in model">Marking</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSameMarking(model.Marking)">getSameMarking</a></span>&#8203;(<a href="Marking.html" title="class in model">Marking</a>&nbsp;comparison)</code></th>
<td class="colLast">
<div class="block">Liefert eine Markierung mit den gleichen Tokens auf der gleichen Stelle
 zurück, wenn sie eine solche schon im Erreichbarkeitsgraphen befindet.</div>
</td>
</tr>
<tr class="rowColor" id="i9">
<td class="colFirst"><code>java.util.Set&lt;<a href="MarkingToMarkingArc.html" title="class in model">MarkingToMarkingArc</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSpecificArcs()">getSpecificArcs</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor" id="i10">
<td class="colFirst"><code>java.util.Set&lt;<a href="Marking.html" title="class in model">Marking</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#markingsReaching(model.Marking)">markingsReaching</a></span>&#8203;(<a href="Marking.html" title="class in model">Marking</a>&nbsp;target)</code></th>
<td class="colLast">
<div class="block">Erstellt eine Menge an Markierungen, von denen aus diese Markierung erreichbar ist.</div>
</td>
</tr>
<tr class="rowColor" id="i11">
<td class="colFirst"><code><a href="Marking.html" title="class in model">Marking</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#registerMarking(model.Marking,model.Marking,java.lang.String,java.lang.String)">registerMarking</a></span>&#8203;(<a href="Marking.html" title="class in model">Marking</a>&nbsp;origin,
<a href="Marking.html" title="class in model">Marking</a>&nbsp;target,
java.lang.String&nbsp;sourceTransitionId,
java.lang.String&nbsp;sourceTransitionName)</code></th>
<td class="colLast">
<div class="block">Fügt dem Erreichbarkeitsgraphen eine neue Markierung und eine Kante
 hinzu, die vom <code>origin</code> zum <code>target</code> verläuft.</div>
</td>
</tr>
<tr class="altColor" id="i12">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reset()">reset</a></span>()</code></th>
<td class="colLast">
<div class="block">Setzt den Erreichbarkeitsgraphen in den Zustand zurück, in dem nur sein
 aktueller Wurzelknoten angezeigt wird,</div>
</td>
</tr>
<tr class="rowColor" id="i13">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetOriginalRoot()">resetOriginalRoot</a></span>()</code></th>
<td class="colLast">
<div class="block">Setzt den Knoten als Wurzel ein, der dem Knostruktor als Wurzel kenntlich
 gemacht worde ist.</div>
</td>
</tr>
<tr class="altColor" id="i14">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetRoot(model.Marking)">resetRoot</a></span>&#8203;(<a href="Marking.html" title="class in model">Marking</a>&nbsp;newRoot)</code></th>
<td class="colLast">
<div class="block">Setzt <code>newRoot</code> als neuen Wurzelknoten ein.</div>
</td>
</tr>
<tr class="rowColor" id="i15">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Übersichtliche Darstellung als String, genutzt, um Netze ohne
 GUI halbwegs visualisieren zu können.</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="inheritedList">
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a><code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></div>
</section>
</li>
</ul>
</section>
<section class="details">
<ul class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<li class="blockList">
<section class="fieldDetails"><a id="field.detail">
<!--   -->
</a>
<h2>Field Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="ROOT_NAME">ROOT_NAME</a></h3>
<div class="memberSignature"><span class="modifiers">public static final</span>&nbsp;<span class="returnType">java.lang.String</span>&nbsp;<span class="memberName">ROOT_NAME</span></div>
<div class="block">The transition name given to the root.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#model.ReachabilityNet.ROOT_NAME">Constant Field Values</a></dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<li class="blockList">
<section class="constructorDetails"><a id="constructor.detail">
<!--   -->
</a>
<h2>Constructor Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(model.PetriNet)">ReachabilityNet</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="memberName">ReachabilityNet</span>&#8203;(<span class="arguments"><a href="PetriNet.html" title="class in model">PetriNet</a>&nbsp;petriNet)</span></div>
<div class="block">Erstellt einen Erreichbarkeitsgraphen, entnimmt dem Petrinetz
 seine Startkonfiguration und benutzt sie als Wurzel.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>petriNet</code> - Das Petrinetz</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ============ METHOD DETAIL ========== -->
<li class="blockList">
<section class="methodDetails"><a id="method.detail">
<!--   -->
</a>
<h2>Method Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="getPetriNet()">getPetriNet</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="PetriNet.html" title="class in model">PetriNet</a></span>&nbsp;<span class="memberName">getPetriNet</span>()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getRoot()">getRoot</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Marking.html" title="class in model">Marking</a></span>&nbsp;<span class="memberName">getRoot</span>()</div>
<div class="block">Liefert die Wurzel des Knoten, der die Startkonfiguration
 des Petrinetzes darstellt.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>die Wurzel</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="analyze(model.PetriNet)">analyze</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">analyze</span>&#8203;(<span class="arguments"><a href="PetriNet.html" title="class in model">PetriNet</a>&nbsp;petriNet)</span>
             throws <span class="exceptions"><a href="GraphIsUnlimitedException.html" title="class in model">GraphIsUnlimitedException</a></span></div>
<div class="block">Vervollständigt den Erreichbarkeitsgraphen.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>petriNet</code> - Das zum Erreichbarkeitsgraphen gehörige Petrinetz.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GraphIsUnlimitedException.html" title="class in model">GraphIsUnlimitedException</a></code> - Wenn beim Aufbau des Erreichbarkeitsgraphen ein
 Paar von Markierungen gefunden wird, das darauf schließen lässt, dass dieser
 Erreichbarkeitsgraph unbeschränkt ist.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="markingsReaching(model.Marking)">markingsReaching</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Marking.html" title="class in model">Marking</a>&gt;</span>&nbsp;<span class="memberName">markingsReaching</span>&#8203;(<span class="arguments"><a href="Marking.html" title="class in model">Marking</a>&nbsp;target)</span></div>
<div class="block">Erstellt eine Menge an Markierungen, von denen aus diese Markierung erreichbar ist.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - Zielmarkierung, die erreichbar ist.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Alle Markierungen, die <code>target</code> erreichen können.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="registerMarking(model.Marking,model.Marking,java.lang.String,java.lang.String)">registerMarking</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Marking.html" title="class in model">Marking</a></span>&nbsp;<span class="memberName">registerMarking</span>&#8203;(<span class="arguments"><a href="Marking.html" title="class in model">Marking</a>&nbsp;origin,
<a href="Marking.html" title="class in model">Marking</a>&nbsp;target,
java.lang.String&nbsp;sourceTransitionId,
java.lang.String&nbsp;sourceTransitionName)</span></div>
<div class="block">Fügt dem Erreichbarkeitsgraphen eine neue Markierung und eine Kante
 hinzu, die vom <code>origin</code> zum <code>target</code> verläuft.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>origin</code> - Start der Kante</dd>
<dd><code>target</code> - Ende der Kante</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Das Ende der Kante, das kein Duplikat ist und mit dem außerhalb
 der Methode weitergearbeitet werden kann.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getSameMarking(model.Marking)">getSameMarking</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Marking.html" title="class in model">Marking</a></span>&nbsp;<span class="memberName">getSameMarking</span>&#8203;(<span class="arguments"><a href="Marking.html" title="class in model">Marking</a>&nbsp;comparison)</span></div>
<div class="block">Liefert eine Markierung mit den gleichen Tokens auf der gleichen Stelle
 zurück, wenn sie eine solche schon im Erreichbarkeitsgraphen befindet.
 Ansonsten wird der Parameter zurückgeliefert.
 Alle Markierungen, die auf irgendeine Art und Weise in den Erreichbarkeitsgraphen
 mit eingebunden werden könnten, sollten diese Methode durchlaufen, um Duplikate zu 
 vermeiden.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>comparison</code> - Markierung, nach deren Markenverteilung im Graphen nach einer bereits
 bestehenden Markierung gesucht wird.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die im Erreichbarkeitsgraphen einzigartige Markierung.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="reset()">reset</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">reset</span>()</div>
<div class="block">Setzt den Erreichbarkeitsgraphen in den Zustand zurück, in dem nur sein
 aktueller Wurzelknoten angezeigt wird,</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="resetRoot(model.Marking)">resetRoot</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">resetRoot</span>&#8203;(<span class="arguments"><a href="Marking.html" title="class in model">Marking</a>&nbsp;newRoot)</span></div>
<div class="block">Setzt <code>newRoot</code> als neuen Wurzelknoten ein.
 WICHTIG: es passiert nur das, es findet keine weitere Rücksetzung statt.
 Dazu muss die <code>reset()</code>-Methode aufgerufen werden.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newRoot</code> - Der Knoten, der die neue Wurzel sein soll.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="resetOriginalRoot()">resetOriginalRoot</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">resetOriginalRoot</span>()</div>
<div class="block">Setzt den Knoten als Wurzel ein, der dem Knostruktor als Wurzel kenntlich
 gemacht worde ist.
 WICHTIG: es passiert nur das, es findet keine weitere Rücksetzung statt.
 Dazu muss die <code>reset()</code>-Methode aufgerufen werden.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getMarkings()">getMarkings</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Marking.html" title="class in model">Marking</a>&gt;</span>&nbsp;<span class="memberName">getMarkings</span>()</div>
<div class="block">Liefert alle Markierungen des Erreichbarkeitsgraphen.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Markierungen</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getMarking(java.lang.String)">getMarking</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Marking.html" title="class in model">Marking</a></span>&nbsp;<span class="memberName">getMarking</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
                   throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Gibt die Markierung aus, die diese ID besitzt.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - Die ID, mit der gesucht wird.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die gesuchte Markierung.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn kein Knoten mit dieser ID existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getArcs()">getArcs</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Arc.html" title="class in model">Arc</a>&gt;</span>&nbsp;<span class="memberName">getArcs</span>()</div>
<div class="block">Gibt alle Kanten des Graphen zurück.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="Net.html#getArcs()">getArcs</a></code>&nbsp;in class&nbsp;<code><a href="Net.html" title="class in model">Net</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Kanten.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getNumUniqueArcs()">getNumUniqueArcs</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">int</span>&nbsp;<span class="memberName">getNumUniqueArcs</span>()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getSpecificArcs()">getSpecificArcs</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="MarkingToMarkingArc.html" title="class in model">MarkingToMarkingArc</a>&gt;</span>&nbsp;<span class="memberName">getSpecificArcs</span>()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="toString()">toString</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.lang.String</span>&nbsp;<span class="memberName">toString</span>()</div>
<div class="block">Übersichtliche Darstellung als String, genutzt, um Netze ohne
 GUI halbwegs visualisieren zu können.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Übersicht.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getNodes()">getNodes</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="NodeModel.html" title="class in model">NodeModel</a>&gt;</span>&nbsp;<span class="memberName">getNodes</span>()</div>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="Net.html#getNodes()">Net</a></code></span></div>
<div class="block">Gibt alle Knoten des Netzes aus.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="Net.html#getNodes()">getNodes</a></code>&nbsp;in class&nbsp;<code><a href="Net.html" title="class in model">Net</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Knoten.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
</ul>
</section>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</main>
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ReachabilityNet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</div>
</div>
</body>
</html>
