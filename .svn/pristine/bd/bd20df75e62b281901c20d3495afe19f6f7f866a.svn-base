<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="de">
<head>
<!-- Generated by javadoc (14.0.2) on Sat Jan 09 10:07:48 CET 2021 -->
<title>PetriNet</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2021-01-09">
<meta name="description" content="declaration: package: model, class: PetriNet">
<meta name="generator" content="javadoc/ClassWriterImpl">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../script-dir/jquery-ui.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
<script type="text/javascript" src="../script-dir/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../script-dir/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../script-dir/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../script-dir/jquery-3.4.1.js"></script>
<script type="text/javascript" src="../script-dir/jquery-ui.js"></script>
</head>
<body class="class-declaration">
<script type="text/javascript">var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../";
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class="flexBox">
<header role="banner" class="flexHeader">
<nav role="navigation">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/PetriNet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<div class="navListSearch"><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</div>
</div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="skipNav"><a id="skip.navbar.top">
<!--   -->
</a></div>
</nav>
</header>
<div class="flexContent">
<main role="main">
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">model</a></div>
<h1 title="Class PetriNet" class="title">Class PetriNet</h1>
</div>
<div class="contentContainer">
<div class="inheritance" title="Inheritance Tree">java.lang.Object
<div class="inheritance"><a href="Net.html" title="class in model">model.Net</a>
<div class="inheritance">model.PetriNet</div>
</div>
</div>
<section class="description">
<hr>
<pre>public class <span class="typeNameLabel">PetriNet</span>
extends <a href="Net.html" title="class in model">Net</a></pre>
<div class="block">Beschreibt ein Petrinetz.</div>
</section>
<section class="summary">
<ul class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<li class="blockList">
<section class="constructorSummary"><a id="constructor.summary">
<!--   -->
</a>
<h2>Constructor Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.util.Set,java.util.Set,java.util.Map,java.util.Map,java.util.Map,java.util.Map)">PetriNet</a></span>&#8203;(java.util.Set&lt;<a href="Place.html" title="class in model">Place</a>&gt;&nbsp;places,
java.util.Set&lt;<a href="Transition.html" title="class in model">Transition</a>&gt;&nbsp;transitions,
java.util.Map&lt;java.lang.String,&#8203;java.lang.String&gt;&nbsp;names,
java.util.Map&lt;java.lang.String,&#8203;<a href="Position.html" title="class in model">Position</a>&gt;&nbsp;positions,
java.util.Map&lt;java.lang.String,&#8203;java.lang.Integer&gt;&nbsp;tokens,
java.util.Map&lt;java.lang.String,&#8203;<a href="Pair.html" title="class in model">Pair</a>&lt;java.lang.String,&#8203;java.lang.String&gt;&gt;&nbsp;arcs)</code></th>
<td class="colLast">
<div class="block">Der Konstruktor des Petinetzes.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ========== METHOD SUMMARY =========== -->
<li class="blockList">
<section class="methodSummary"><a id="method.summary">
<!--   -->
</a>
<h2>Method Summary</h2>
<div class="memberSummary">
<div role="tablist" aria-orientation="horizontal"><button role="tab" aria-selected="true" aria-controls="memberSummary_tabpanel" tabindex="0" onkeydown="switchTab(event)" id="t0" class="activeTableTab">All Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t2" class="tableTab" onclick="show(2);">Instance Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t4" class="tableTab" onclick="show(8);">Concrete Methods</button></div>
<div id="memberSummary_tabpanel" role="tabpanel">
<table aria-labelledby="t0">
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor" id="i0">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addToken(java.lang.String)">addToken</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">FÃ¼gt der Stelle mit dieser ID eine Marke hinzu.</div>
</td>
</tr>
<tr class="rowColor" id="i1">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#fire(java.lang.String)">fire</a></span>&#8203;(java.lang.String&nbsp;transitionId)</code></th>
<td class="colLast">
<div class="block">Findet eine Transition per ID und feuert diese.</div>
</td>
</tr>
<tr class="altColor" id="i2">
<td class="colFirst"><code><a href="PetriNet.html" title="class in model">PetriNet</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#fromMarking(model.Marking)">fromMarking</a></span>&#8203;(<a href="Marking.html" title="class in model">Marking</a>&nbsp;marking)</code></th>
<td class="colLast">
<div class="block">Erstellt eine Kopie des Petrinetzes mit der durch marking gegebenen
 Verteilung an Marken.</div>
</td>
</tr>
<tr class="rowColor" id="i3">
<td class="colFirst"><code>java.util.Set&lt;<a href="Arc.html" title="class in model">Arc</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getArcs()">getArcs</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt die Kanten des Petrinetzes aus.</div>
</td>
</tr>
<tr class="altColor" id="i4">
<td class="colFirst"><code><a href="Marking.html" title="class in model">Marking</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMarking()">getMarking</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt die aktuelle Markierung des Petrinetzes aus, ohne das
 Petrinetz zu modifizieren.</div>
</td>
</tr>
<tr class="rowColor" id="i5">
<td class="colFirst"><code><a href="NodeModel.html" title="class in model">NodeModel</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNodeById(java.lang.String)">getNodeById</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">Findet einen Knoten im Petrinetz anhand dessen ID.</div>
</td>
</tr>
<tr class="altColor" id="i6">
<td class="colFirst"><code>java.util.Set&lt;<a href="NodeModel.html" title="class in model">NodeModel</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNodes()">getNodes</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt alle Knoten des Netzes aus.</div>
</td>
</tr>
<tr class="rowColor" id="i7">
<td class="colFirst"><code><a href="Place.html" title="class in model">Place</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPlaceById(java.lang.String)">getPlaceById</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">Findet eine Stelle anhand derer ID.</div>
</td>
</tr>
<tr class="altColor" id="i8">
<td class="colFirst"><code>java.util.Set&lt;<a href="Place.html" title="class in model">Place</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPlaces()">getPlaces</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt die Stellen des Petrinetzes aus.</div>
</td>
</tr>
<tr class="rowColor" id="i9">
<td class="colFirst"><code><a href="Transition.html" title="class in model">Transition</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTransitionById(java.lang.String)">getTransitionById</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">Findet eine Transition anhand derer ID.</div>
</td>
</tr>
<tr class="altColor" id="i10">
<td class="colFirst"><code>java.util.Set&lt;<a href="Transition.html" title="class in model">Transition</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTransitions()">getTransitions</a></span>()</code></th>
<td class="colLast">
<div class="block">Gibt die Transitionen des Petrinetzes aus.</div>
</td>
</tr>
<tr class="rowColor" id="i11">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetTokens()">resetTokens</a></span>()</code></th>
<td class="colLast">
<div class="block">Setzt alle Tokens der Stellen auf den Anfangszustand zurÃ¼ck.</div>
</td>
</tr>
<tr class="altColor" id="i12">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetTokens(java.util.Map)">resetTokens</a></span>&#8203;(java.util.Map&lt;java.lang.String,&#8203;java.lang.Integer&gt;&nbsp;tokensDistribution)</code></th>
<td class="colLast">
<div class="block">Setzt alle Tokens wie in <code>tokensDistribution</code> beschrieben.</div>
</td>
</tr>
<tr class="rowColor" id="i13">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#subtractToken(java.lang.String)">subtractToken</a></span>&#8203;(java.lang.String&nbsp;id)</code></th>
<td class="colLast">
<div class="block">Zieht der Stelle mit dieser ID eine Marke ab.</div>
</td>
</tr>
<tr class="altColor" id="i14">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Ãbersichtliche Darstellung als String.</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="inheritedList">
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a><code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></div>
</section>
</li>
</ul>
</section>
<section class="details">
<ul class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<li class="blockList">
<section class="constructorDetails"><a id="constructor.detail">
<!--   -->
</a>
<h2>Constructor Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(java.util.Set,java.util.Set,java.util.Map,java.util.Map,java.util.Map,java.util.Map)">PetriNet</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="memberName">PetriNet</span>&#8203;(<span class="arguments">java.util.Set&lt;<a href="Place.html" title="class in model">Place</a>&gt;&nbsp;places,
java.util.Set&lt;<a href="Transition.html" title="class in model">Transition</a>&gt;&nbsp;transitions,
java.util.Map&lt;java.lang.String,&#8203;java.lang.String&gt;&nbsp;names,
java.util.Map&lt;java.lang.String,&#8203;<a href="Position.html" title="class in model">Position</a>&gt;&nbsp;positions,
java.util.Map&lt;java.lang.String,&#8203;java.lang.Integer&gt;&nbsp;tokens,
java.util.Map&lt;java.lang.String,&#8203;<a href="Pair.html" title="class in model">Pair</a>&lt;java.lang.String,&#8203;java.lang.String&gt;&gt;&nbsp;arcs)</span>
         throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a>,
<a href="IllegalArcException.html" title="class in model">IllegalArcException</a></span></div>
<div class="block">Der Konstruktor des Petinetzes.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>places</code> - Die Stellen des Petrinetzes.</dd>
<dd><code>transitions</code> - Die Transitionen des Petrinetzes.</dd>
<dd><code>names</code> - Die Namen der Knoten des Petrinetzes.</dd>
<dd><code>positions</code> - Die Positionen aller Knoten im Petrinetz.</dd>
<dd><code>tokens</code> - Die Verteilung der Tokens auf die Stellen.</dd>
<dd><code>arcs</code> - Die Kanten des Petrinetzes.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn eine Stelle nicht Ã¼ber ihre ID gefunden
 werden kann.</dd>
<dd><code><a href="IllegalArcException.html" title="class in model">IllegalArcException</a></code> - Wenn eine Kante zwischen zwei Stellen oder zwei
 Transitionen existiert.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ============ METHOD DETAIL ========== -->
<li class="blockList">
<section class="methodDetails"><a id="method.detail">
<!--   -->
</a>
<h2>Method Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="getPlaceById(java.lang.String)">getPlaceById</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Place.html" title="class in model">Place</a></span>&nbsp;<span class="memberName">getPlaceById</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
                   throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Findet eine Stelle anhand derer ID.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - Die ID der gesuchten Stelle.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Stelle mit dieser ID.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn keine Stelle mit dieser ID im Petrinetz existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getTransitionById(java.lang.String)">getTransitionById</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Transition.html" title="class in model">Transition</a></span>&nbsp;<span class="memberName">getTransitionById</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
                             throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Findet eine Transition anhand derer ID.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - Die ID der gesuchten Transition.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Transition, die diese ID besitzt.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn keine Transition mit dieser ID im Petrinetz existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getNodeById(java.lang.String)">getNodeById</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="NodeModel.html" title="class in model">NodeModel</a></span>&nbsp;<span class="memberName">getNodeById</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
                      throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Findet einen Knoten im Petrinetz anhand dessen ID.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - Die ID des Knoten.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Den gesuchten Knoten.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn kein Knoten mit dieser ID im Petrinetz existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="fire(java.lang.String)">fire</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">fire</span>&#8203;(<span class="arguments">java.lang.String&nbsp;transitionId)</span>
          throws <span class="exceptions"><a href="CannotFireException.html" title="class in model">CannotFireException</a></span></div>
<div class="block">Findet eine Transition per ID und feuert diese.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>transitionId</code> - Die ID, mit der die Transition gesucht wird.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="CannotFireException.html" title="class in model">CannotFireException</a></code> - Wenn keine Transition mit dieser ID existiert, oder
 die Transition nicht feuern kann, weil es im Preset an Marken fehlt.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="addToken(java.lang.String)">addToken</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">addToken</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
              throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">FÃ¼gt der Stelle mit dieser ID eine Marke hinzu.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - ID der gesuchten Stelle.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn keine Stelle mit dieser ID existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="subtractToken(java.lang.String)">subtractToken</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">subtractToken</span>&#8203;(<span class="arguments">java.lang.String&nbsp;id)</span>
                   throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Zieht der Stelle mit dieser ID eine Marke ab.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - ID der gesuchten Stelle.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn keine Stelle mit dieser ID existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="resetTokens()">resetTokens</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">resetTokens</span>()
                 throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Setzt alle Tokens der Stellen auf den Anfangszustand zurÃ¼ck.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn eine Stelle nicht Ã¼ber ihre gefunden
 werden kann.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="resetTokens(java.util.Map)">resetTokens</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">resetTokens</span>&#8203;(<span class="arguments">java.util.Map&lt;java.lang.String,&#8203;java.lang.Integer&gt;&nbsp;tokensDistribution)</span>
                 throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Setzt alle Tokens wie in <code>tokensDistribution</code> beschrieben.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tokensDistribution</code> - Ein Mapping der IDs auf die neue Zahl an Marken.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn eine ID einer Stelle in der Map nicht existiert.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="toString()">toString</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.lang.String</span>&nbsp;<span class="memberName">toString</span>()</div>
<div class="block">Ãbersichtliche Darstellung als String.
 Habe ich oft benutzt, um mir einen Ãberblick den Zustand
 des Petrinetz zu machen.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getPlaces()">getPlaces</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Place.html" title="class in model">Place</a>&gt;</span>&nbsp;<span class="memberName">getPlaces</span>()</div>
<div class="block">Gibt die Stellen des Petrinetzes aus.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Stellen.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getTransitions()">getTransitions</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Transition.html" title="class in model">Transition</a>&gt;</span>&nbsp;<span class="memberName">getTransitions</span>()</div>
<div class="block">Gibt die Transitionen des Petrinetzes aus.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Transitionen.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="fromMarking(model.Marking)">fromMarking</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="PetriNet.html" title="class in model">PetriNet</a></span>&nbsp;<span class="memberName">fromMarking</span>&#8203;(<span class="arguments"><a href="Marking.html" title="class in model">Marking</a>&nbsp;marking)</span>
                     throws <span class="exceptions"><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></span></div>
<div class="block">Erstellt eine Kopie des Petrinetzes mit der durch marking gegebenen
 Verteilung an Marken.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>marking</code> - Die Markierung, Verteilung der Marken auf Stellen.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Kopie des Petrinetzes, die Marken verteilt wie in marking.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="NodeNotFoundException.html" title="class in model">NodeNotFoundException</a></code> - Wenn im Marking eine ID einer Stelle existiert,
 die im Petrinetz nicht vorkommt.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getArcs()">getArcs</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="Arc.html" title="class in model">Arc</a>&gt;</span>&nbsp;<span class="memberName">getArcs</span>()</div>
<div class="block">Gibt die Kanten des Petrinetzes aus.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="Net.html#getArcs()">getArcs</a></code>&nbsp;in class&nbsp;<code><a href="Net.html" title="class in model">Net</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Kanten.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getMarking()">getMarking</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType"><a href="Marking.html" title="class in model">Marking</a></span>&nbsp;<span class="memberName">getMarking</span>()</div>
<div class="block">Gibt die aktuelle Markierung des Petrinetzes aus, ohne das
 Petrinetz zu modifizieren.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Markierung.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getNodes()">getNodes</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.util.Set&lt;<a href="NodeModel.html" title="class in model">NodeModel</a>&gt;</span>&nbsp;<span class="memberName">getNodes</span>()</div>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="Net.html#getNodes()">Net</a></code></span></div>
<div class="block">Gibt alle Knoten des Netzes aus.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="Net.html#getNodes()">getNodes</a></code>&nbsp;in class&nbsp;<code><a href="Net.html" title="class in model">Net</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Die Knoten.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
</ul>
</section>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</main>
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/PetriNet.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</div>
</div>
</body>
</html>
